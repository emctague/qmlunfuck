isEmpty(QML_IMPORT_VERSION): \
    QML_IMPORT_VERSION = $$IMPORT_VERSION
# from moc.prf
isEmpty(QML_IMPORT_MAJOR_VERSION):!isEmpty(QML_IMPORT_VERSION): \
    QML_IMPORT_MAJOR_VERSION = $$section(QML_IMPORT_VERSION, ., 0, 0)

isEmpty(QML_IMPORT_MINOR_VERSION):!isEmpty(QML_IMPORT_VERSION): \
    QML_IMPORT_MINOR_VERSION = $$section(QML_IMPORT_VERSION, ., 1, 1)

isEmpty(QML_IMPORT_NAME):!isEmpty(TARGETPATH) {
    QML_IMPORT_NAME = $$replace(TARGETPATH, "/", ".")
    QML_IMPORT_NAME = $$replace(QML_IMPORT_NAME, .$${QML_IMPORT_MAJOR_VERSION}$, '')
}

isEmpty(QML_IMPORT_NAME) {
    error("Need TARGET_PATH or QML_IMPORT_NAME in order to generate qml types.");
}

isEmpty(QML_IMPORT_MAJOR_VERSION) {
    error("Need IMPORT_VERSION, QML_IMPORT_VERSION, or QML_IMPORT_MAJOR_VERSION in order to generate qml types.");
}

isEmpty(QML_IMPORT_MINOR_VERSION) {
    QML_IMPORT_MINOR_VERSION = 0
}

UNFK_TARGET_BASENAME = $$lower($$basename(TARGET))
UNFK_TARGET_BASENAME ~= s/\s/_/g

isEmpty(UNFK_QMLTYPES_FILENAME) {
    plugin: UNFK_QMLTYPES_FILENAME = plugins.qmltypes
    else: UNFK_QMLTYPES_FILENAME = $${UNFK_TARGET_BASENAME}.qmltypes
}

UNFK_METATYPES_JSON = $${UNFK_TARGET_BASENAME}_metatypes.json
UNFK_TYPEREGISTRATIONS = $${UNFK_TARGET_BASENAME}_qmlunfuck$${first(QMAKE_EXT_CPP)}

qmlunfuck.CONFIG += combine
qmlunfuck.commands = \
    python3 $$PWD/qmlunfuck.py ${QMAKE_FILE_IN} ${QMAKE_FILE_OUT} $$QML_IMPORT_NAME $$QML_IMPORT_MAJOR_VERSION $$QML_IMPORT_MINOR_VERSION
qmlunfuck.input = UNFK_METATYPES_JSON
qmlunfuck.output = $$UNFK_TYPEREGISTRATIONS
qmlunfuck.variable_out = SOURCES
qmlunfuck.name = QML Unfucker
qmlunfuck.dependency_type = TYPE_C

QMAKE_EXTRA_COMPILERS += qmlunfuck
